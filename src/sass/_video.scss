/*
 * Copyright (C) 2017 Mark P. Lindsay
 * 
 * This file is part of mysteriousobjectsatnoon.
 *
 * mysteriousobjectsatnoon is free software: you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * mysteriousobjectsatnoon is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with mysteriousobjectsatnoon.  If not, see 
 * <http://www.gnu.org/licenses/>.
 */

video {
  width: 100%; 
  height: 100%; 
}

.video-item {
  position: absolute;
  display: block;
  z-index: 3;

  &.most-recently-touched {
    z-index: 4;
  }

  &.should-show-placeholder {
    .video-placeholder {
      display: block;
      z-index: 6;
    }
  }

  &.is-showing-metadata {
    background-color: transparent;
  }

  .video {
    z-index: 3;
    position: relative;
  }

  .react-resizable-handle {
    bottom: 0;
    right: 0;
  }

  .obstructor,
  .poster-image {
    display: block;
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    z-index: 4;
    // The starting opacity of the destination item's obstructor is 0 -- it is
    // transparent.
    transition: opacity 3s;
    opacity: 0;
    background-color: $black;
  }

  .poster-image {
    background-size: cover;
    // We want the video to cover the poster image once it loads.
    z-index: 2;
  }

  .video-placeholder {
    display: none;
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
  }
}

.video-item.is-source-item {
  // On source item click, video itself becomes 0.5 opaque because it is against
  // the background at z-index 1.
  z-index: 1;
  position: fixed;
  opacity: 0.5;
}

.video-item.is-destination-item {
  position: fixed;
}

.is-in-linking-transition {

  .video-item {
    // Once destination item is clicked, all unrelated video items fade away.
    transition: opacity 3s;
    opacity: 0;
  }

  .video-item.is-destination-item {
    // Except the destination item. We're going to dim it via its obstructor's 
    // opacity in the component code.
    opacity: 1;
  }

  .video-item.is-source-item {
    // Delay fading the source item back in by 4s. But at the 4s mark, fade it 
    // back in over 3s.
    transition: opacity 3s 4s;
    opacity: 1;
  }

  .video-item.navigation-source {
    opacity: .5;
  }
}

.is-in-linking-transition.stage-2 {
  // In linking transition stage 2 (after 4s),

  .video-item {
    // fade all video items back in.
    transition: opacity 3s;
    opacity: 1;
  }

  .video-item.is-destination-item {
    // Except the destination item -- fade it out to invisibility.
    transition: opacity 3s;
    opacity: 0;
  }

  .video-item.navigation-destination {
    transition: opacity 1s;
    opacity: 1;
  }
}
